{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loggerPlugin = void 0;\nconst logger_1 = require(\"../../logger\");\nconst loggerPlugin = (proxyServer, options) => {\n  const logger = (0, logger_1.getLogger)(options);\n  proxyServer.on('error', (err, req, res, target) => {\n    const hostname = req?.headers?.host;\n    const requestHref = `${hostname}${req?.url}`;\n    const targetHref = `${target?.href}`; // target is undefined when websocket errors\n    const errorMessage = '[HPM] Error occurred while proxying request %s to %s [%s] (%s)';\n    const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n    logger.error(errorMessage, requestHref, targetHref, err.code || err, errReference);\n  });\n  /**\n   * Log request and response\n   * @example\n   * ```shell\n   * [HPM] GET /users/ -> http://jsonplaceholder.typicode.com/users/ [304]\n   * ```\n   */\n  proxyServer.on('proxyRes', (proxyRes, req, res) => {\n    // BrowserSync uses req.originalUrl\n    // Next.js doesn't have req.baseUrl\n    const originalUrl = req.originalUrl ?? `${req.baseUrl || ''}${req.url}`;\n    const exchange = `[HPM] ${req.method} ${originalUrl} -> ${proxyRes.req.protocol}//${proxyRes.req.host}${proxyRes.req.path} [${proxyRes.statusCode}]`;\n    logger.info(exchange);\n  });\n  /**\n   * When client opens WebSocket connection\n   */\n  proxyServer.on('open', socket => {\n    logger.info('[HPM] Client connected: %o', socket.address());\n  });\n  /**\n   * When client closes WebSocket connection\n   */\n  proxyServer.on('close', (req, proxySocket, proxyHead) => {\n    logger.info('[HPM] Client disconnected: %o', proxySocket.address());\n  });\n};\nexports.loggerPlugin = loggerPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","loggerPlugin","logger_1","require","proxyServer","options","logger","getLogger","on","err","req","res","target","hostname","headers","host","requestHref","url","targetHref","href","errorMessage","errReference","error","code","proxyRes","originalUrl","baseUrl","exchange","method","protocol","path","statusCode","info","socket","address","proxySocket","proxyHead"],"sources":["C:/Users/walle/Documents/lummelundalogin/lummelundalogin/node_modules/http-proxy-middleware/dist/plugins/default/logger-plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loggerPlugin = void 0;\nconst logger_1 = require(\"../../logger\");\nconst loggerPlugin = (proxyServer, options) => {\n    const logger = (0, logger_1.getLogger)(options);\n    proxyServer.on('error', (err, req, res, target) => {\n        const hostname = req?.headers?.host;\n        const requestHref = `${hostname}${req?.url}`;\n        const targetHref = `${target?.href}`; // target is undefined when websocket errors\n        const errorMessage = '[HPM] Error occurred while proxying request %s to %s [%s] (%s)';\n        const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n        logger.error(errorMessage, requestHref, targetHref, err.code || err, errReference);\n    });\n    /**\n     * Log request and response\n     * @example\n     * ```shell\n     * [HPM] GET /users/ -> http://jsonplaceholder.typicode.com/users/ [304]\n     * ```\n     */\n    proxyServer.on('proxyRes', (proxyRes, req, res) => {\n        // BrowserSync uses req.originalUrl\n        // Next.js doesn't have req.baseUrl\n        const originalUrl = req.originalUrl ?? `${req.baseUrl || ''}${req.url}`;\n        const exchange = `[HPM] ${req.method} ${originalUrl} -> ${proxyRes.req.protocol}//${proxyRes.req.host}${proxyRes.req.path} [${proxyRes.statusCode}]`;\n        logger.info(exchange);\n    });\n    /**\n     * When client opens WebSocket connection\n     */\n    proxyServer.on('open', (socket) => {\n        logger.info('[HPM] Client connected: %o', socket.address());\n    });\n    /**\n     * When client closes WebSocket connection\n     */\n    proxyServer.on('close', (req, proxySocket, proxyHead) => {\n        logger.info('[HPM] Client disconnected: %o', proxySocket.address());\n    });\n};\nexports.loggerPlugin = loggerPlugin;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMF,YAAY,GAAGA,CAACG,WAAW,EAAEC,OAAO,KAAK;EAC3C,MAAMC,MAAM,GAAG,CAAC,CAAC,EAAEJ,QAAQ,CAACK,SAAS,EAAEF,OAAO,CAAC;EAC/CD,WAAW,CAACI,EAAE,CAAC,OAAO,EAAE,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,KAAK;IAC/C,MAAMC,QAAQ,GAAGH,GAAG,EAAEI,OAAO,EAAEC,IAAI;IACnC,MAAMC,WAAW,GAAG,GAAGH,QAAQ,GAAGH,GAAG,EAAEO,GAAG,EAAE;IAC5C,MAAMC,UAAU,GAAG,GAAGN,MAAM,EAAEO,IAAI,EAAE,CAAC,CAAC;IACtC,MAAMC,YAAY,GAAG,gEAAgE;IACrF,MAAMC,YAAY,GAAG,gEAAgE,CAAC,CAAC;IACvFf,MAAM,CAACgB,KAAK,CAACF,YAAY,EAAEJ,WAAW,EAAEE,UAAU,EAAET,GAAG,CAACc,IAAI,IAAId,GAAG,EAAEY,YAAY,CAAC;EACtF,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjB,WAAW,CAACI,EAAE,CAAC,UAAU,EAAE,CAACgB,QAAQ,EAAEd,GAAG,EAAEC,GAAG,KAAK;IAC/C;IACA;IACA,MAAMc,WAAW,GAAGf,GAAG,CAACe,WAAW,IAAI,GAAGf,GAAG,CAACgB,OAAO,IAAI,EAAE,GAAGhB,GAAG,CAACO,GAAG,EAAE;IACvE,MAAMU,QAAQ,GAAG,SAASjB,GAAG,CAACkB,MAAM,IAAIH,WAAW,OAAOD,QAAQ,CAACd,GAAG,CAACmB,QAAQ,KAAKL,QAAQ,CAACd,GAAG,CAACK,IAAI,GAAGS,QAAQ,CAACd,GAAG,CAACoB,IAAI,KAAKN,QAAQ,CAACO,UAAU,GAAG;IACpJzB,MAAM,CAAC0B,IAAI,CAACL,QAAQ,CAAC;EACzB,CAAC,CAAC;EACF;AACJ;AACA;EACIvB,WAAW,CAACI,EAAE,CAAC,MAAM,EAAGyB,MAAM,IAAK;IAC/B3B,MAAM,CAAC0B,IAAI,CAAC,4BAA4B,EAAEC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF;AACJ;AACA;EACI9B,WAAW,CAACI,EAAE,CAAC,OAAO,EAAE,CAACE,GAAG,EAAEyB,WAAW,EAAEC,SAAS,KAAK;IACrD9B,MAAM,CAAC0B,IAAI,CAAC,+BAA+B,EAAEG,WAAW,CAACD,OAAO,CAAC,CAAC,CAAC;EACvE,CAAC,CAAC;AACN,CAAC;AACDnC,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}