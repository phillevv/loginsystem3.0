{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar Socket = require('./socket');\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:namespace');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Namespace;\n\n/**\n * Blacklisted events.\n */\n\nexports.events = ['connect',\n// for symmetry with client\n'connection', 'newListener'];\n\n/**\n * Flags.\n */\n\nexports.flags = ['json', 'volatile', 'local'];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Namespace constructor.\n *\n * @param {Server} server instance\n * @param {Socket} name\n * @api private\n */\n\nfunction Namespace(server, name) {\n  this.name = name;\n  this.server = server;\n  this.sockets = {};\n  this.connected = {};\n  this.fns = [];\n  this.ids = 0;\n  this.initAdapter();\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nNamespace.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nexports.flags.forEach(function (flag) {\n  Object.defineProperty(Namespace.prototype, flag, {\n    get: function () {\n      this.flags = this.flags || {};\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * Initializes the `Adapter` for this nsp.\n * Run upon changing adapter by `Server#adapter`\n * in addition to the constructor.\n *\n * @api private\n */\n\nNamespace.prototype.initAdapter = function () {\n  this.adapter = new (this.server.adapter())(this);\n};\n\n/**\n * Sets up namespace middleware.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.use = function (fn) {\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming client.\n *\n * @param {Socket} socket that will get added\n * @param {Function} fn last fn call in the middleware\n * @api private\n */\n\nNamespace.prototype.run = function (socket, fn) {\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n  function run(i) {\n    fns[i](socket, function (err) {\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n  run(0);\n};\n\n/**\n * Targets a room when emitting.\n *\n * @param {String} name\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.to = Namespace.prototype.in = function (name) {\n  this.rooms = this.rooms || [];\n  if (!~this.rooms.indexOf(name)) this.rooms.push(name);\n  return this;\n};\n\n/**\n * Adds a new client.\n *\n * @return {Socket}\n * @api private\n */\n\nNamespace.prototype.add = function (client, query, fn) {\n  debug('adding socket to nsp %s', this.name);\n  var socket = new Socket(this, client, query);\n  var self = this;\n  this.run(socket, function (err) {\n    process.nextTick(function () {\n      if ('open' == client.conn.readyState) {\n        if (err) return socket.error(err.data || err.message);\n\n        // track socket\n        self.sockets[socket.id] = socket;\n\n        // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n        socket.onconnect();\n        if (fn) fn();\n\n        // fire user-set events\n        self.emit('connect', socket);\n        self.emit('connection', socket);\n      } else {\n        debug('next called after client was closed - ignoring socket');\n      }\n    });\n  });\n  return socket;\n};\n\n/**\n * Removes a client. Called by each `Socket`.\n *\n * @api private\n */\n\nNamespace.prototype.remove = function (socket) {\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    delete this.sockets[socket.id];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Emits to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.emit = function (ev) {\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n  } else {\n    // set up packet object\n    var args = Array.prototype.slice.call(arguments);\n    var parserType = parser.EVENT; // default\n    if (hasBin(args)) {\n      parserType = parser.BINARY_EVENT;\n    } // binary\n\n    var packet = {\n      type: parserType,\n      data: args\n    };\n    if ('function' == typeof args[args.length - 1]) {\n      throw new Error('Callbacks are not supported when broadcasting');\n    }\n    this.adapter.broadcast(packet, {\n      rooms: this.rooms,\n      flags: this.flags\n    });\n    delete this.rooms;\n    delete this.flags;\n  }\n  return this;\n};\n\n/**\n * Sends a `message` event to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.send = Namespace.prototype.write = function () {\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Gets a list of clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.clients = function (fn) {\n  this.adapter.clients(this.rooms, fn);\n  // delete rooms flag for scenario:\n  // .in('room').clients() (GH-1978)\n  delete this.rooms;\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nNamespace.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};","map":{"version":3,"names":["Socket","require","Emitter","EventEmitter","parser","debug","hasBin","module","exports","Namespace","events","flags","emit","prototype","server","name","sockets","connected","fns","ids","initAdapter","__proto__","forEach","flag","Object","defineProperty","get","adapter","use","fn","push","run","socket","slice","length","i","err","to","in","rooms","indexOf","add","client","query","self","process","nextTick","conn","readyState","error","data","message","id","onconnect","remove","hasOwnProperty","ev","apply","arguments","args","Array","call","parserType","EVENT","BINARY_EVENT","packet","type","Error","broadcast","send","write","unshift","clients","compress"],"sources":["C:/Users/walle/Documents/lummelundalogin/lummelundalogin/node_modules/socket.io/lib/namespace.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Socket = require('./socket');\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:namespace');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Namespace;\n\n/**\n * Blacklisted events.\n */\n\nexports.events = [\n  'connect',    // for symmetry with client\n  'connection',\n  'newListener'\n];\n\n/**\n * Flags.\n */\n\nexports.flags = [\n  'json',\n  'volatile',\n  'local'\n];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Namespace constructor.\n *\n * @param {Server} server instance\n * @param {Socket} name\n * @api private\n */\n\nfunction Namespace(server, name){\n  this.name = name;\n  this.server = server;\n  this.sockets = {};\n  this.connected = {};\n  this.fns = [];\n  this.ids = 0;\n  this.initAdapter();\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nNamespace.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nexports.flags.forEach(function(flag){\n  Object.defineProperty(Namespace.prototype, flag, {\n    get: function() {\n      this.flags = this.flags || {};\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * Initializes the `Adapter` for this nsp.\n * Run upon changing adapter by `Server#adapter`\n * in addition to the constructor.\n *\n * @api private\n */\n\nNamespace.prototype.initAdapter = function(){\n  this.adapter = new (this.server.adapter())(this);\n};\n\n/**\n * Sets up namespace middleware.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.use = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming client.\n *\n * @param {Socket} socket that will get added\n * @param {Function} fn last fn call in the middleware\n * @api private\n */\n\nNamespace.prototype.run = function(socket, fn){\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i){\n    fns[i](socket, function(err){\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n\n/**\n * Targets a room when emitting.\n *\n * @param {String} name\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.to =\nNamespace.prototype.in = function(name){\n  this.rooms = this.rooms || [];\n  if (!~this.rooms.indexOf(name)) this.rooms.push(name);\n  return this;\n};\n\n/**\n * Adds a new client.\n *\n * @return {Socket}\n * @api private\n */\n\nNamespace.prototype.add = function(client, query, fn){\n  debug('adding socket to nsp %s', this.name);\n  var socket = new Socket(this, client, query);\n  var self = this;\n  this.run(socket, function(err){\n    process.nextTick(function(){\n      if ('open' == client.conn.readyState) {\n        if (err) return socket.error(err.data || err.message);\n\n        // track socket\n        self.sockets[socket.id] = socket;\n\n        // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n        socket.onconnect();\n        if (fn) fn();\n\n        // fire user-set events\n        self.emit('connect', socket);\n        self.emit('connection', socket);\n      } else {\n        debug('next called after client was closed - ignoring socket');\n      }\n    });\n  });\n  return socket;\n};\n\n/**\n * Removes a client. Called by each `Socket`.\n *\n * @api private\n */\n\nNamespace.prototype.remove = function(socket){\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    delete this.sockets[socket.id];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Emits to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.emit = function(ev){\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n  } else {\n    // set up packet object\n    var args = Array.prototype.slice.call(arguments);\n    var parserType = parser.EVENT; // default\n    if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\n    var packet = { type: parserType, data: args };\n\n    if ('function' == typeof args[args.length - 1]) {\n      throw new Error('Callbacks are not supported when broadcasting');\n    }\n\n    this.adapter.broadcast(packet, {\n      rooms: this.rooms,\n      flags: this.flags\n    });\n\n    delete this.rooms;\n    delete this.flags;\n  }\n  return this;\n};\n\n/**\n * Sends a `message` event to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.send =\nNamespace.prototype.write = function(){\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Gets a list of clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.clients = function(fn){\n  this.adapter.clients(this.rooms, fn);\n  // delete rooms flag for scenario:\n  // .in('room').clients() (GH-1978)\n  delete this.rooms;\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nNamespace.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}