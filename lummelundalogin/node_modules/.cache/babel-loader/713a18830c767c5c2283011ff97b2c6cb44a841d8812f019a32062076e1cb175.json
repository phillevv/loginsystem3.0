{"ast":null,"code":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util'),\n  events = require('events'),\n  http = require('http'),\n  crypto = require('crypto'),\n  Options = require('options'),\n  WebSocket = require('./WebSocket'),\n  Extensions = require('./Extensions'),\n  PerMessageDeflate = require('./PerMessageDeflate'),\n  tls = require('tls'),\n  url = require('url');\n\n/**\n * WebSocket Server implementation\n */\n\nfunction WebSocketServer(options, callback) {\n  if (this instanceof WebSocketServer === false) {\n    return new WebSocketServer(options, callback);\n  }\n  events.EventEmitter.call(this);\n  options = new Options({\n    host: '0.0.0.0',\n    port: null,\n    server: null,\n    verifyClient: null,\n    handleProtocols: null,\n    path: null,\n    noServer: false,\n    disableHixie: false,\n    clientTracking: true,\n    perMessageDeflate: true,\n    maxPayload: 100 * 1024 * 1024\n  }).merge(options);\n  if (!options.isDefinedAndNonNull('port') && !options.isDefinedAndNonNull('server') && !options.value.noServer) {\n    throw new TypeError('`port` or a `server` must be provided');\n  }\n  var self = this;\n  if (options.isDefinedAndNonNull('port')) {\n    this._server = http.createServer(function (req, res) {\n      var body = http.STATUS_CODES[426];\n      res.writeHead(426, {\n        'Content-Length': body.length,\n        'Content-Type': 'text/plain'\n      });\n      res.end(body);\n    });\n    this._server.allowHalfOpen = false;\n    this._server.listen(options.value.port, options.value.host, callback);\n    this._closeServer = function () {\n      if (self._server) self._server.close();\n    };\n  } else if (options.value.server) {\n    this._server = options.value.server;\n    if (options.value.path) {\n      // take note of the path, to avoid collisions when multiple websocket servers are\n      // listening on the same http server\n      if (this._server._webSocketPaths && options.value.server._webSocketPaths[options.value.path]) {\n        throw new Error('two instances of WebSocketServer cannot listen on the same http server path');\n      }\n      if (typeof this._server._webSocketPaths !== 'object') {\n        this._server._webSocketPaths = {};\n      }\n      this._server._webSocketPaths[options.value.path] = 1;\n    }\n  }\n  if (this._server) {\n    this._onceServerListening = function () {\n      self.emit('listening');\n    };\n    this._server.once('listening', this._onceServerListening);\n  }\n  if (typeof this._server != 'undefined') {\n    this._onServerError = function (error) {\n      self.emit('error', error);\n    };\n    this._server.on('error', this._onServerError);\n    this._onServerUpgrade = function (req, socket, upgradeHead) {\n      //copy upgradeHead to avoid retention of large slab buffers used in node core\n      var head = new Buffer(upgradeHead.length);\n      upgradeHead.copy(head);\n      self.handleUpgrade(req, socket, head, function (client) {\n        self.emit('connection' + req.url, client);\n        self.emit('connection', client);\n      });\n    };\n    this._server.on('upgrade', this._onServerUpgrade);\n  }\n  this.options = options.value;\n  this.path = options.value.path;\n  this.clients = [];\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(WebSocketServer, events.EventEmitter);\n\n/**\n * Immediately shuts down the connection.\n *\n * @api public\n */\n\nWebSocketServer.prototype.close = function (callback) {\n  // terminate all associated clients\n  var error = null;\n  try {\n    for (var i = 0, l = this.clients.length; i < l; ++i) {\n      this.clients[i].terminate();\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  // remove path descriptor, if any\n  if (this.path && this._server._webSocketPaths) {\n    delete this._server._webSocketPaths[this.path];\n    if (Object.keys(this._server._webSocketPaths).length == 0) {\n      delete this._server._webSocketPaths;\n    }\n  }\n\n  // close the http server if it was internally created\n  try {\n    if (typeof this._closeServer !== 'undefined') {\n      this._closeServer();\n    }\n  } finally {\n    if (this._server) {\n      this._server.removeListener('listening', this._onceServerListening);\n      this._server.removeListener('error', this._onServerError);\n      this._server.removeListener('upgrade', this._onServerUpgrade);\n    }\n    delete this._server;\n  }\n  if (callback) callback(error);else if (error) throw error;\n};\n\n/**\n * Handle a HTTP Upgrade request.\n *\n * @api public\n */\n\nWebSocketServer.prototype.handleUpgrade = function (req, socket, upgradeHead, cb) {\n  // check for wrong path\n  if (this.options.path) {\n    var u = url.parse(req.url);\n    if (u && u.pathname !== this.options.path) return;\n  }\n  if (typeof req.headers.upgrade === 'undefined' || req.headers.upgrade.toLowerCase() !== 'websocket') {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n  if (req.headers['sec-websocket-key1']) handleHixieUpgrade.apply(this, arguments);else handleHybiUpgrade.apply(this, arguments);\n};\nmodule.exports = WebSocketServer;\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\n\nfunction handleHybiUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function () {\n    try {\n      socket.destroy();\n    } catch (e) {}\n  };\n  socket.on('error', errorHandler);\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify version\n  var version = parseInt(req.headers['sec-websocket-version']);\n  if ([8, 13].indexOf(version) === -1) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify protocol\n  var protocols = req.headers['sec-websocket-protocol'];\n\n  // verify client\n  var origin = version < 13 ? req.headers['sec-websocket-origin'] : req.headers['origin'];\n\n  // handle extensions offer\n  var extensionsOffer = Extensions.parse(req.headers['sec-websocket-extensions']);\n\n  // handler to call when the connection sequence completes\n  var self = this;\n  var completeHybiUpgrade2 = function (protocol) {\n    // calc key\n    var key = req.headers['sec-websocket-key'];\n    var shasum = crypto.createHash('sha1');\n    shasum.update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\");\n    key = shasum.digest('base64');\n    var headers = ['HTTP/1.1 101 Switching Protocols', 'Upgrade: websocket', 'Connection: Upgrade', 'Sec-WebSocket-Accept: ' + key];\n    if (typeof protocol != 'undefined') {\n      headers.push('Sec-WebSocket-Protocol: ' + protocol);\n    }\n    var extensions = {};\n    try {\n      extensions = acceptExtensions.call(self, extensionsOffer);\n    } catch (err) {\n      abortConnection(socket, 400, 'Bad Request');\n      return;\n    }\n    if (Object.keys(extensions).length) {\n      var serverExtensions = {};\n      Object.keys(extensions).forEach(function (token) {\n        serverExtensions[token] = [extensions[token].params];\n      });\n      headers.push('Sec-WebSocket-Extensions: ' + Extensions.format(serverExtensions));\n    }\n\n    // allows external modification/inspection of handshake headers\n    self.emit('headers', headers);\n    socket.setTimeout(0);\n    socket.setNoDelay(true);\n    try {\n      socket.write(headers.concat('', '').join('\\r\\n'));\n    } catch (e) {\n      // if the upgrade write fails, shut the connection down hard\n      try {\n        socket.destroy();\n      } catch (e) {}\n      return;\n    }\n    var client = new WebSocket([req, socket, upgradeHead], {\n      protocolVersion: version,\n      protocol: protocol,\n      extensions: extensions,\n      maxPayload: self.options.maxPayload\n    });\n    if (self.options.clientTracking) {\n      self.clients.push(client);\n      client.on('close', function () {\n        var index = self.clients.indexOf(client);\n        if (index != -1) {\n          self.clients.splice(index, 1);\n        }\n      });\n    }\n\n    // signal upgrade complete\n    socket.removeListener('error', errorHandler);\n    cb(client);\n  };\n\n  // optionally call external protocol selection handler before\n  // calling completeHybiUpgrade2\n  var completeHybiUpgrade1 = function () {\n    // choose from the sub-protocols\n    if (typeof self.options.handleProtocols == 'function') {\n      var protList = (protocols || \"\").split(/, */);\n      var callbackCalled = false;\n      var res = self.options.handleProtocols(protList, function (result, protocol) {\n        callbackCalled = true;\n        if (!result) abortConnection(socket, 401, 'Unauthorized');else completeHybiUpgrade2(protocol);\n      });\n      if (!callbackCalled) {\n        // the handleProtocols handler never called our callback\n        abortConnection(socket, 501, 'Could not process protocols');\n      }\n      return;\n    } else {\n      if (typeof protocols !== 'undefined') {\n        completeHybiUpgrade2(protocols.split(/, */)[0]);\n      } else {\n        completeHybiUpgrade2();\n      }\n    }\n  };\n\n  // optionally call external client verification handler\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      this.options.verifyClient(info, function (result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n        if (!result) abortConnection(socket, code, name);else completeHybiUpgrade1();\n      });\n      return;\n    } else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n  completeHybiUpgrade1();\n}\nfunction handleHixieUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function () {\n    try {\n      socket.destroy();\n    } catch (e) {}\n  };\n  socket.on('error', errorHandler);\n\n  // bail if options prevent hixie\n  if (this.options.disableHixie) {\n    abortConnection(socket, 401, 'Hixie support disabled');\n    return;\n  }\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key2']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n  var origin = req.headers['origin'],\n    self = this;\n\n  // setup handshake completion to run after client has been verified\n  var onClientVerified = function () {\n    var wshost;\n    if (!req.headers['x-forwarded-host']) wshost = req.headers.host;else wshost = req.headers['x-forwarded-host'];\n    var location = (req.headers['x-forwarded-proto'] === 'https' || socket.encrypted ? 'wss' : 'ws') + '://' + wshost + req.url,\n      protocol = req.headers['sec-websocket-protocol'];\n\n    // build the response header and return a Buffer\n    var buildResponseHeader = function () {\n      var headers = ['HTTP/1.1 101 Switching Protocols', 'Upgrade: WebSocket', 'Connection: Upgrade', 'Sec-WebSocket-Location: ' + location];\n      if (typeof protocol != 'undefined') headers.push('Sec-WebSocket-Protocol: ' + protocol);\n      if (typeof origin != 'undefined') headers.push('Sec-WebSocket-Origin: ' + origin);\n      return new Buffer(headers.concat('', '').join('\\r\\n'));\n    };\n\n    // send handshake response before receiving the nonce\n    var handshakeResponse = function () {\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n      var headerBuffer = buildResponseHeader();\n      try {\n        socket.write(headerBuffer, 'binary', function (err) {\n          // remove listener if there was an error\n          if (err) socket.removeListener('data', handler);\n          return;\n        });\n      } catch (e) {\n        try {\n          socket.destroy();\n        } catch (e) {}\n        return;\n      }\n      ;\n    };\n\n    // handshake completion code to run once nonce has been successfully retrieved\n    var completeHandshake = function (nonce, rest, headerBuffer) {\n      // calculate key\n      var k1 = req.headers['sec-websocket-key1'],\n        k2 = req.headers['sec-websocket-key2'],\n        md5 = crypto.createHash('md5');\n      [k1, k2].forEach(function (k) {\n        var n = parseInt(k.replace(/[^\\d]/g, '')),\n          spaces = k.replace(/[^ ]/g, '').length;\n        if (spaces === 0 || n % spaces !== 0) {\n          abortConnection(socket, 400, 'Bad Request');\n          return;\n        }\n        n /= spaces;\n        md5.update(String.fromCharCode(n >> 24 & 0xFF, n >> 16 & 0xFF, n >> 8 & 0xFF, n & 0xFF));\n      });\n      md5.update(nonce.toString('binary'));\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n      try {\n        var hashBuffer = new Buffer(md5.digest('binary'), 'binary');\n        var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);\n        headerBuffer.copy(handshakeBuffer, 0);\n        hashBuffer.copy(handshakeBuffer, headerBuffer.length);\n\n        // do a single write, which - upon success - causes a new client websocket to be setup\n        socket.write(handshakeBuffer, 'binary', function (err) {\n          if (err) return; // do not create client if an error happens\n          var client = new WebSocket([req, socket, rest], {\n            protocolVersion: 'hixie-76',\n            protocol: protocol\n          });\n          if (self.options.clientTracking) {\n            self.clients.push(client);\n            client.on('close', function () {\n              var index = self.clients.indexOf(client);\n              if (index != -1) {\n                self.clients.splice(index, 1);\n              }\n            });\n          }\n\n          // signal upgrade complete\n          socket.removeListener('error', errorHandler);\n          cb(client);\n        });\n      } catch (e) {\n        try {\n          socket.destroy();\n        } catch (e) {}\n        return;\n      }\n    };\n\n    // retrieve nonce\n    var nonceLength = 8;\n    if (upgradeHead && upgradeHead.length >= nonceLength) {\n      var nonce = upgradeHead.slice(0, nonceLength);\n      var rest = upgradeHead.length > nonceLength ? upgradeHead.slice(nonceLength) : null;\n      completeHandshake.call(self, nonce, rest, buildResponseHeader());\n    } else {\n      // nonce not present in upgradeHead\n      var nonce = new Buffer(nonceLength);\n      upgradeHead.copy(nonce, 0);\n      var received = upgradeHead.length;\n      var rest = null;\n      var handler = function (data) {\n        var toRead = Math.min(data.length, nonceLength - received);\n        if (toRead === 0) return;\n        data.copy(nonce, received, 0, toRead);\n        received += toRead;\n        if (received == nonceLength) {\n          socket.removeListener('data', handler);\n          if (toRead < data.length) rest = data.slice(toRead);\n\n          // complete the handshake but send empty buffer for headers since they have already been sent\n          completeHandshake.call(self, nonce, rest, new Buffer(0));\n        }\n      };\n\n      // handle additional data as we receive it\n      socket.on('data', handler);\n\n      // send header response before we have the nonce to fix haproxy buffering\n      handshakeResponse();\n    }\n  };\n\n  // verify client\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      var self = this;\n      this.options.verifyClient(info, function (result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n        if (!result) abortConnection(socket, code, name);else onClientVerified.apply(self);\n      });\n      return;\n    } else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  // no client verification required\n  onClientVerified();\n}\nfunction acceptExtensions(offer) {\n  var extensions = {};\n  var options = this.options.perMessageDeflate;\n  var maxPayload = this.options.maxPayload;\n  if (options && offer[PerMessageDeflate.extensionName]) {\n    var perMessageDeflate = new PerMessageDeflate(options !== true ? options : {}, true, maxPayload);\n    perMessageDeflate.accept(offer[PerMessageDeflate.extensionName]);\n    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n  }\n  return extensions;\n}\nfunction abortConnection(socket, code, name) {\n  try {\n    var response = ['HTTP/1.1 ' + code + ' ' + name, 'Content-type: text/html'];\n    socket.write(response.concat('', '').join('\\r\\n'));\n  } catch (e) {/* ignore errors - we've aborted this connection */} finally {\n    // ensure that an early aborted connection is shut down completely\n    try {\n      socket.destroy();\n    } catch (e) {}\n  }\n}","map":{"version":3,"names":["util","require","events","http","crypto","Options","WebSocket","Extensions","PerMessageDeflate","tls","url","WebSocketServer","options","callback","EventEmitter","call","host","port","server","verifyClient","handleProtocols","path","noServer","disableHixie","clientTracking","perMessageDeflate","maxPayload","merge","isDefinedAndNonNull","value","TypeError","self","_server","createServer","req","res","body","STATUS_CODES","writeHead","length","end","allowHalfOpen","listen","_closeServer","close","_webSocketPaths","Error","_onceServerListening","emit","once","_onServerError","error","on","_onServerUpgrade","socket","upgradeHead","head","Buffer","copy","handleUpgrade","client","clients","inherits","prototype","i","l","terminate","e","Object","keys","removeListener","cb","u","parse","pathname","headers","upgrade","toLowerCase","abortConnection","handleHixieUpgrade","apply","arguments","handleHybiUpgrade","module","exports","errorHandler","destroy","version","parseInt","indexOf","protocols","origin","extensionsOffer","completeHybiUpgrade2","protocol","key","shasum","createHash","update","digest","push","extensions","acceptExtensions","err","serverExtensions","forEach","token","params","format","setTimeout","setNoDelay","write","concat","join","protocolVersion","index","splice","completeHybiUpgrade1","protList","split","callbackCalled","result","info","secure","connection","authorized","encrypted","code","name","onClientVerified","wshost","location","buildResponseHeader","handshakeResponse","headerBuffer","handler","completeHandshake","nonce","rest","k1","k2","md5","k","n","replace","spaces","String","fromCharCode","toString","hashBuffer","handshakeBuffer","nonceLength","slice","received","data","toRead","Math","min","offer","extensionName","accept","response"],"sources":["C:/Users/walle/Documents/lummelundalogin/lummelundalogin/node_modules/engine.io/node_modules/ws/lib/WebSocketServer.js"],"sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , events = require('events')\n  , http = require('http')\n  , crypto = require('crypto')\n  , Options = require('options')\n  , WebSocket = require('./WebSocket')\n  , Extensions = require('./Extensions')\n  , PerMessageDeflate = require('./PerMessageDeflate')\n  , tls = require('tls')\n  , url = require('url');\n\n/**\n * WebSocket Server implementation\n */\n\nfunction WebSocketServer(options, callback) {\n  if (this instanceof WebSocketServer === false) {\n    return new WebSocketServer(options, callback);\n  }\n\n  events.EventEmitter.call(this);\n\n  options = new Options({\n    host: '0.0.0.0',\n    port: null,\n    server: null,\n    verifyClient: null,\n    handleProtocols: null,\n    path: null,\n    noServer: false,\n    disableHixie: false,\n    clientTracking: true,\n    perMessageDeflate: true,\n    maxPayload: 100 * 1024 * 1024\n  }).merge(options);\n\n  if (!options.isDefinedAndNonNull('port') && !options.isDefinedAndNonNull('server') && !options.value.noServer) {\n    throw new TypeError('`port` or a `server` must be provided');\n  }\n\n  var self = this;\n\n  if (options.isDefinedAndNonNull('port')) {\n    this._server = http.createServer(function (req, res) {\n      var body = http.STATUS_CODES[426];\n      res.writeHead(426, {\n        'Content-Length': body.length,\n        'Content-Type': 'text/plain'\n      });\n      res.end(body);\n    });\n    this._server.allowHalfOpen = false;\n    this._server.listen(options.value.port, options.value.host, callback);\n    this._closeServer = function() { if (self._server) self._server.close(); };\n  }\n  else if (options.value.server) {\n    this._server = options.value.server;\n    if (options.value.path) {\n      // take note of the path, to avoid collisions when multiple websocket servers are\n      // listening on the same http server\n      if (this._server._webSocketPaths && options.value.server._webSocketPaths[options.value.path]) {\n        throw new Error('two instances of WebSocketServer cannot listen on the same http server path');\n      }\n      if (typeof this._server._webSocketPaths !== 'object') {\n        this._server._webSocketPaths = {};\n      }\n      this._server._webSocketPaths[options.value.path] = 1;\n    }\n  }\n  if (this._server) {\n    this._onceServerListening = function() { self.emit('listening'); };\n    this._server.once('listening', this._onceServerListening);\n  }\n\n  if (typeof this._server != 'undefined') {\n    this._onServerError = function(error) { self.emit('error', error) };\n    this._server.on('error', this._onServerError);\n    this._onServerUpgrade = function(req, socket, upgradeHead) {\n      //copy upgradeHead to avoid retention of large slab buffers used in node core\n      var head = new Buffer(upgradeHead.length);\n      upgradeHead.copy(head);\n\n      self.handleUpgrade(req, socket, head, function(client) {\n        self.emit('connection'+req.url, client);\n        self.emit('connection', client);\n      });\n    };\n    this._server.on('upgrade', this._onServerUpgrade);\n  }\n\n  this.options = options.value;\n  this.path = options.value.path;\n  this.clients = [];\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(WebSocketServer, events.EventEmitter);\n\n/**\n * Immediately shuts down the connection.\n *\n * @api public\n */\n\nWebSocketServer.prototype.close = function(callback) {\n  // terminate all associated clients\n  var error = null;\n  try {\n    for (var i = 0, l = this.clients.length; i < l; ++i) {\n      this.clients[i].terminate();\n    }\n  }\n  catch (e) {\n    error = e;\n  }\n\n  // remove path descriptor, if any\n  if (this.path && this._server._webSocketPaths) {\n    delete this._server._webSocketPaths[this.path];\n    if (Object.keys(this._server._webSocketPaths).length == 0) {\n      delete this._server._webSocketPaths;\n    }\n  }\n\n  // close the http server if it was internally created\n  try {\n    if (typeof this._closeServer !== 'undefined') {\n      this._closeServer();\n    }\n  }\n  finally {\n    if (this._server) {\n      this._server.removeListener('listening', this._onceServerListening);\n      this._server.removeListener('error', this._onServerError);\n      this._server.removeListener('upgrade', this._onServerUpgrade);\n    }\n    delete this._server;\n  }\n  if(callback)\n    callback(error);\n  else if(error)\n    throw error;\n}\n\n/**\n * Handle a HTTP Upgrade request.\n *\n * @api public\n */\n\nWebSocketServer.prototype.handleUpgrade = function(req, socket, upgradeHead, cb) {\n  // check for wrong path\n  if (this.options.path) {\n    var u = url.parse(req.url);\n    if (u && u.pathname !== this.options.path) return;\n  }\n\n  if (typeof req.headers.upgrade === 'undefined' || req.headers.upgrade.toLowerCase() !== 'websocket') {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  if (req.headers['sec-websocket-key1']) handleHixieUpgrade.apply(this, arguments);\n  else handleHybiUpgrade.apply(this, arguments);\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\n\nfunction handleHybiUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify version\n  var version = parseInt(req.headers['sec-websocket-version']);\n  if ([8, 13].indexOf(version) === -1) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify protocol\n  var protocols = req.headers['sec-websocket-protocol'];\n\n  // verify client\n  var origin = version < 13 ?\n    req.headers['sec-websocket-origin'] :\n    req.headers['origin'];\n\n  // handle extensions offer\n  var extensionsOffer = Extensions.parse(req.headers['sec-websocket-extensions']);\n\n  // handler to call when the connection sequence completes\n  var self = this;\n  var completeHybiUpgrade2 = function(protocol) {\n\n    // calc key\n    var key = req.headers['sec-websocket-key'];\n    var shasum = crypto.createHash('sha1');\n    shasum.update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\");\n    key = shasum.digest('base64');\n\n    var headers = [\n        'HTTP/1.1 101 Switching Protocols'\n      , 'Upgrade: websocket'\n      , 'Connection: Upgrade'\n      , 'Sec-WebSocket-Accept: ' + key\n    ];\n\n    if (typeof protocol != 'undefined') {\n      headers.push('Sec-WebSocket-Protocol: ' + protocol);\n    }\n\n    var extensions = {};\n    try {\n      extensions = acceptExtensions.call(self, extensionsOffer);\n    } catch (err) {\n      abortConnection(socket, 400, 'Bad Request');\n      return;\n    }\n\n    if (Object.keys(extensions).length) {\n      var serverExtensions = {};\n      Object.keys(extensions).forEach(function(token) {\n        serverExtensions[token] = [extensions[token].params]\n      });\n      headers.push('Sec-WebSocket-Extensions: ' + Extensions.format(serverExtensions));\n    }\n\n    // allows external modification/inspection of handshake headers\n    self.emit('headers', headers);\n\n    socket.setTimeout(0);\n    socket.setNoDelay(true);\n    try {\n      socket.write(headers.concat('', '').join('\\r\\n'));\n    }\n    catch (e) {\n      // if the upgrade write fails, shut the connection down hard\n      try { socket.destroy(); } catch (e) {}\n      return;\n    }\n\n    var client = new WebSocket([req, socket, upgradeHead], {\n      protocolVersion: version,\n      protocol: protocol,\n      extensions: extensions,\n      maxPayload: self.options.maxPayload\n    });\n\n    if (self.options.clientTracking) {\n      self.clients.push(client);\n      client.on('close', function() {\n        var index = self.clients.indexOf(client);\n        if (index != -1) {\n          self.clients.splice(index, 1);\n        }\n      });\n    }\n\n    // signal upgrade complete\n    socket.removeListener('error', errorHandler);\n    cb(client);\n  }\n\n  // optionally call external protocol selection handler before\n  // calling completeHybiUpgrade2\n  var completeHybiUpgrade1 = function() {\n    // choose from the sub-protocols\n    if (typeof self.options.handleProtocols == 'function') {\n        var protList = (protocols || \"\").split(/, */);\n        var callbackCalled = false;\n        var res = self.options.handleProtocols(protList, function(result, protocol) {\n          callbackCalled = true;\n          if (!result) abortConnection(socket, 401, 'Unauthorized');\n          else completeHybiUpgrade2(protocol);\n        });\n        if (!callbackCalled) {\n            // the handleProtocols handler never called our callback\n            abortConnection(socket, 501, 'Could not process protocols');\n        }\n        return;\n    } else {\n        if (typeof protocols !== 'undefined') {\n            completeHybiUpgrade2(protocols.split(/, */)[0]);\n        }\n        else {\n            completeHybiUpgrade2();\n        }\n    }\n  }\n\n  // optionally call external client verification handler\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else completeHybiUpgrade1();\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  completeHybiUpgrade1();\n}\n\nfunction handleHixieUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // bail if options prevent hixie\n  if (this.options.disableHixie) {\n    abortConnection(socket, 401, 'Hixie support disabled');\n    return;\n  }\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key2']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  var origin = req.headers['origin']\n    , self = this;\n\n  // setup handshake completion to run after client has been verified\n  var onClientVerified = function() {\n    var wshost;\n    if (!req.headers['x-forwarded-host'])\n        wshost = req.headers.host;\n    else\n        wshost = req.headers['x-forwarded-host'];\n    var location = ((req.headers['x-forwarded-proto'] === 'https' || socket.encrypted) ? 'wss' : 'ws') + '://' + wshost + req.url\n      , protocol = req.headers['sec-websocket-protocol'];\n\n    // build the response header and return a Buffer\n    var buildResponseHeader = function() {\n      var headers = [\n          'HTTP/1.1 101 Switching Protocols'\n        , 'Upgrade: WebSocket'\n        , 'Connection: Upgrade'\n        , 'Sec-WebSocket-Location: ' + location\n      ];\n      if (typeof protocol != 'undefined') headers.push('Sec-WebSocket-Protocol: ' + protocol);\n      if (typeof origin != 'undefined') headers.push('Sec-WebSocket-Origin: ' + origin);\n\n      return new Buffer(headers.concat('', '').join('\\r\\n'));\n    };\n\n    // send handshake response before receiving the nonce\n    var handshakeResponse = function() {\n\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n\n      var headerBuffer = buildResponseHeader();\n\n      try {\n        socket.write(headerBuffer, 'binary', function(err) {\n          // remove listener if there was an error\n          if (err) socket.removeListener('data', handler);\n          return;\n        });\n      } catch (e) {\n        try { socket.destroy(); } catch (e) {}\n        return;\n      };\n    };\n\n    // handshake completion code to run once nonce has been successfully retrieved\n    var completeHandshake = function(nonce, rest, headerBuffer) {\n      // calculate key\n      var k1 = req.headers['sec-websocket-key1']\n        , k2 = req.headers['sec-websocket-key2']\n        , md5 = crypto.createHash('md5');\n\n      [k1, k2].forEach(function (k) {\n        var n = parseInt(k.replace(/[^\\d]/g, ''))\n          , spaces = k.replace(/[^ ]/g, '').length;\n        if (spaces === 0 || n % spaces !== 0){\n          abortConnection(socket, 400, 'Bad Request');\n          return;\n        }\n        n /= spaces;\n        md5.update(String.fromCharCode(\n          n >> 24 & 0xFF,\n          n >> 16 & 0xFF,\n          n >> 8  & 0xFF,\n          n       & 0xFF));\n      });\n      md5.update(nonce.toString('binary'));\n\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n\n      try {\n        var hashBuffer = new Buffer(md5.digest('binary'), 'binary');\n        var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);\n        headerBuffer.copy(handshakeBuffer, 0);\n        hashBuffer.copy(handshakeBuffer, headerBuffer.length);\n\n        // do a single write, which - upon success - causes a new client websocket to be setup\n        socket.write(handshakeBuffer, 'binary', function(err) {\n          if (err) return; // do not create client if an error happens\n          var client = new WebSocket([req, socket, rest], {\n            protocolVersion: 'hixie-76',\n            protocol: protocol\n          });\n          if (self.options.clientTracking) {\n            self.clients.push(client);\n            client.on('close', function() {\n              var index = self.clients.indexOf(client);\n              if (index != -1) {\n                self.clients.splice(index, 1);\n              }\n            });\n          }\n\n          // signal upgrade complete\n          socket.removeListener('error', errorHandler);\n          cb(client);\n        });\n      }\n      catch (e) {\n        try { socket.destroy(); } catch (e) {}\n        return;\n      }\n    }\n\n    // retrieve nonce\n    var nonceLength = 8;\n    if (upgradeHead && upgradeHead.length >= nonceLength) {\n      var nonce = upgradeHead.slice(0, nonceLength);\n      var rest = upgradeHead.length > nonceLength ? upgradeHead.slice(nonceLength) : null;\n      completeHandshake.call(self, nonce, rest, buildResponseHeader());\n    }\n    else {\n      // nonce not present in upgradeHead\n      var nonce = new Buffer(nonceLength);\n      upgradeHead.copy(nonce, 0);\n      var received = upgradeHead.length;\n      var rest = null;\n      var handler = function (data) {\n        var toRead = Math.min(data.length, nonceLength - received);\n        if (toRead === 0) return;\n        data.copy(nonce, received, 0, toRead);\n        received += toRead;\n        if (received == nonceLength) {\n          socket.removeListener('data', handler);\n          if (toRead < data.length) rest = data.slice(toRead);\n\n          // complete the handshake but send empty buffer for headers since they have already been sent\n          completeHandshake.call(self, nonce, rest, new Buffer(0));\n        }\n      }\n\n      // handle additional data as we receive it\n      socket.on('data', handler);\n\n      // send header response before we have the nonce to fix haproxy buffering\n      handshakeResponse();\n    }\n  }\n\n  // verify client\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      var self = this;\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else onClientVerified.apply(self);\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  // no client verification required\n  onClientVerified();\n}\n\nfunction acceptExtensions(offer) {\n  var extensions = {};\n  var options = this.options.perMessageDeflate;\n  var maxPayload = this.options.maxPayload;\n  if (options && offer[PerMessageDeflate.extensionName]) {\n    var perMessageDeflate = new PerMessageDeflate(options !== true ? options : {}, true, maxPayload);\n    perMessageDeflate.accept(offer[PerMessageDeflate.extensionName]);\n    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n  }\n  return extensions;\n}\n\nfunction abortConnection(socket, code, name) {\n  try {\n    var response = [\n      'HTTP/1.1 ' + code + ' ' + name,\n      'Content-type: text/html'\n    ];\n    socket.write(response.concat('', '').join('\\r\\n'));\n  }\n  catch (e) { /* ignore errors - we've aborted this connection */ }\n  finally {\n    // ensure that an early aborted connection is shut down completely\n    try { socket.destroy(); } catch (e) {}\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}