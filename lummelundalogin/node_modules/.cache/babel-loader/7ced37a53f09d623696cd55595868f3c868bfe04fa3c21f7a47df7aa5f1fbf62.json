{"ast":null,"code":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events'),\n  util = require('util'),\n  EventEmitter = events.EventEmitter;\n\n/**\n * Hixie Sender implementation\n */\n\nfunction Sender(socket) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n  events.EventEmitter.call(this);\n  this.socket = socket;\n  this.continuationFrame = false;\n  this.isClosed = false;\n}\nmodule.exports = Sender;\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Frames and writes data.\n *\n * @api public\n */\n\nSender.prototype.send = function (data, options, cb) {\n  if (this.isClosed) return;\n  var isString = typeof data == 'string',\n    length = isString ? Buffer.byteLength(data) : data.length,\n    lengthbytes = length > 127 ? 2 : 1 // assume less than 2**14 bytes\n    ,\n    writeStartMarker = this.continuationFrame == false,\n    writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin),\n    buffer = new Buffer((writeStartMarker ? options && options.binary ? 1 + lengthbytes : 1 : 0) + length + (writeEndMarker && !(options && options.binary) ? 1 : 0)),\n    offset = writeStartMarker ? 1 : 0;\n  if (writeStartMarker) {\n    if (options && options.binary) {\n      buffer.write('\\x80', 'binary');\n      // assume length less than 2**14 bytes\n      if (lengthbytes > 1) buffer.write(String.fromCharCode(128 + length / 128), offset++, 'binary');\n      buffer.write(String.fromCharCode(length & 0x7f), offset++, 'binary');\n    } else buffer.write('\\x00', 'binary');\n  }\n  if (isString) buffer.write(data, offset, 'utf8');else data.copy(buffer, offset, 0);\n  if (writeEndMarker) {\n    if (options && options.binary) {\n      // sending binary, not writing end marker\n    } else buffer.write('\\xff', offset + length, 'binary');\n    this.continuationFrame = false;\n  } else this.continuationFrame = true;\n  try {\n    this.socket.write(buffer, 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function (code, data, mask, cb) {\n  if (this.isClosed) return;\n  this.isClosed = true;\n  try {\n    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a ping message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.ping = function (data, options) {};\n\n/**\n * Sends a pong message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.pong = function (data, options) {};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nSender.prototype.error = function (reason) {\n  this.emit('error', reason);\n  return this;\n};","map":{"version":3,"names":["events","require","util","EventEmitter","Sender","socket","TypeError","call","continuationFrame","isClosed","module","exports","inherits","prototype","send","data","options","cb","isString","length","Buffer","byteLength","lengthbytes","writeStartMarker","writeEndMarker","fin","buffer","binary","offset","write","String","fromCharCode","copy","e","error","toString","close","code","mask","ping","pong","reason","emit"],"sources":["C:/Users/walle/Documents/lummelundalogin/lummelundalogin/node_modules/engine.io/node_modules/ws/lib/Sender.hixie.js"],"sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter;\n\n/**\n * Hixie Sender implementation\n */\n\nfunction Sender(socket) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this.socket = socket;\n  this.continuationFrame = false;\n  this.isClosed = false;\n}\n\nmodule.exports = Sender;\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Frames and writes data.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  if (this.isClosed) return;\n\n  var isString = typeof data == 'string'\n    , length = isString ? Buffer.byteLength(data) : data.length\n    , lengthbytes = (length > 127) ? 2 : 1 // assume less than 2**14 bytes\n    , writeStartMarker = this.continuationFrame == false\n    , writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin)\n    , buffer = new Buffer((writeStartMarker ? ((options && options.binary) ? (1 + lengthbytes) : 1) : 0) + length + ((writeEndMarker && !(options && options.binary)) ? 1 : 0))\n    , offset = writeStartMarker ? 1 : 0;\n\n  if (writeStartMarker) {\n    if (options && options.binary) {\n      buffer.write('\\x80', 'binary');\n      // assume length less than 2**14 bytes\n      if (lengthbytes > 1)\n        buffer.write(String.fromCharCode(128+length/128), offset++, 'binary');\n      buffer.write(String.fromCharCode(length&0x7f), offset++, 'binary');\n    } else\n      buffer.write('\\x00', 'binary');\n  }\n\n  if (isString) buffer.write(data, offset, 'utf8');\n  else data.copy(buffer, offset, 0);\n\n  if (writeEndMarker) {\n    if (options && options.binary) {\n      // sending binary, not writing end marker\n    } else\n      buffer.write('\\xff', offset + length, 'binary');\n    this.continuationFrame = false;\n  }\n  else this.continuationFrame = true;\n\n  try {\n    this.socket.write(buffer, 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (this.isClosed) return;\n  this.isClosed = true;\n  try {\n    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a ping message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {};\n\n/**\n * Sends a pong message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nSender.prototype.error = function (reason) {\n  this.emit('error', reason);\n  return this;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}