{"ast":null,"code":"'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\nvar WS = module.exports = require('./lib/WebSocket');\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n  return client;\n};","map":{"version":3,"names":["WS","module","exports","require","Server","Sender","Receiver","createServer","options","fn","server","on","connect","createConnection","address","client"],"sources":["C:/Users/walle/Documents/lummelundalogin/lummelundalogin/node_modules/engine.io/node_modules/ws/index.js"],"sourcesContent":["'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AAEA,IAAIA,EAAE,GAAGC,MAAM,CAACC,OAAO,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAEpDH,EAAE,CAACI,MAAM,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC5CH,EAAE,CAACK,MAAM,GAAGF,OAAO,CAAC,cAAc,CAAC;AACnCH,EAAE,CAACM,QAAQ,GAAGH,OAAO,CAAC,gBAAgB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAE,CAACO,YAAY,GAAG,SAASA,YAAYA,CAACC,OAAO,EAAEC,EAAE,EAAE;EACnD,IAAIC,MAAM,GAAG,IAAIV,EAAE,CAACI,MAAM,CAACI,OAAO,CAAC;EAEnC,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;IAC5BC,MAAM,CAACC,EAAE,CAAC,YAAY,EAAEF,EAAE,CAAC;EAC7B;EAEA,OAAOC,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,EAAE,CAACY,OAAO,GAAGZ,EAAE,CAACa,gBAAgB,GAAG,SAASD,OAAOA,CAACE,OAAO,EAAEL,EAAE,EAAE;EAC/D,IAAIM,MAAM,GAAG,IAAIf,EAAE,CAACc,OAAO,CAAC;EAE5B,IAAI,OAAOL,EAAE,KAAK,UAAU,EAAE;IAC5BM,MAAM,CAACJ,EAAE,CAAC,MAAM,EAAEF,EAAE,CAAC;EACvB;EAEA,OAAOM,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}